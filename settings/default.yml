api: {}
encryption:
  key: please-change-me
debug: true
test: false
date_format: '%Y-%m-%d'
db:
  url: postgresql://algonaut:algonaut@localhost/algonaut_development
crossdomain:
  enabled: false
  max-age: 86400 #1 day
plugins: {}
worker:
  tasks:
    # tasks need to be registered here
    - algonaut.worker.tasks.ping
  config:
    broker_url: "amqp://algonaut:algonaut@localhost:5672/algonaut"
    result_backend: "amqp://algonaut:algonaut@localhost:5672/algonaut"
    broker_connection_timeout: 2.0
    task_serializer: json
    accept_content: ['json']
    result_serializer: json
    timezone: Europe/Berlin
    enable_utc: true
    worker_hijack_root_logger: false
    task_default_queue: tasks
    task_queues:
      - {name: tasks, routing_key: 'tasks'}
    task_default_exchange: recipes
    task_track_started: true
    task_default_exchange_type: topic
    task_default_routing_key: task.default
    worker_max_tasks_per_child: 1
    worker_concurrency: 15
    worker_prefetch_multiplier: 1
    task_acks_late: true
    task_ignore_result: false
    result_expires: 1200
  schedule: {}
smtp:
  from: algonaut@enterprise.fed
url: http://localhost:5000
email:
  url: http://localhost:8080 #this is the frontend base URL (e.g. for e-mail change etc.)
  paths:
    v1: {}
  template_paths: 
    0001_base: "{cwd}/templates"
  context:
    security_officer:
      email: Security Officer E-Mail [email.context.security_officer.email]
    service:
      name: Service Name [email.context.service.name]
      url: Service URL [email.context.service.url]
    company:
      team: Team Name
      name: Company Name [email.context.company.name]
      city: Company City [email.context.company.city]
      street: Company Street [email.context.company.street]
      zip_code: Company Zip Code [email.context.company.zip_code]
      email:  Company E-Mail [email.context.company.email]
      url: Company URL [email.context.company.url]
      phone: Company Phone [email.context.company.phone]
languages: [en]
